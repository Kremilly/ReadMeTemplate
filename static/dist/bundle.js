const Animate=(e=>{let getClasses=effect=>{let getEffect=`animate__${effect.replace('animate__','')}`; return ['animate__animated',getEffect];}; let makeEffect=(el,effect,timeOut=true)=>{let classesEffect=getClasses(effect); el.classList.remove(...classesEffect); if (timeOut){setTimeout(e=>{el.classList.add(...classesEffect);},100);}else{el.classList.add(...classesEffect);}}; return{effect:(el,effect,timeout=true)=>{return makeEffect(el,effect,timeout);},};})();const Elements=(e=>{let pageTitle=e=>{let pageTitle=document.title.split(':'); document.getElementById(Elements.headerLabel).textContent=`${pageTitle[1]}:${pageTitle[2]}`;}; return{refsList:'refsList',bibTexCode:'bibTextCode',headerLabel:'headerLabel',bibTexModal:'bibTextModal',docsSourceList:'docsSourceList',scrollToTopBtn:'scrollToTopBtn',scrollToRefsBtn:'scrollToRefsBtn',scrollToDocsBtn:'scrollToDocsBtn',bibTextMaskModal:'bibTextMaskModal',classNames:{modal:'modal',refsList:'refs-list',markdownBody:'markdown-body',contentModal:'modal-content',pluginSection:'plugin-section',docsSourceList:'docs-source-list',},pageTitle:()=>{return pageTitle();},};})();const BibTex=(e=>{let elementCode=Elements.bibTexCode; let elementModal=Elements.bibTexModal; let elementMaskModal=Elements.bibTextMaskModal; let formatBibText=text=>{let textWithoutPTag=text.replace(/<\/?p>/g,''); let braceIndex=textWithoutPTag.indexOf('{',textWithoutPTag.indexOf('@')); let firstPart=textWithoutPTag.slice(0,braceIndex+1); let secondPart=textWithoutPTag.slice(braceIndex+1).replace(/,/g,',\n '); return firstPart+secondPart.slice(0,-1)+'\n'+secondPart.slice(-1);}; let get=el=>{let getElementModal=document.getElementById(elementModal); let dataBibtexValue=el.getAttribute('data-bibtex'); let getBibTex=formatBibText(dataBibtexValue); document.getElementById(elementCode).innerHTML=getBibTex; document.getElementById(elementModal).style.display='flex'; document.getElementById(elementMaskModal).style.display='flex'; Animate.effect(getElementModal,'animate__pulse');}; let copy=e=>{const codeElement=document.querySelector(`#${elementCode}`); if (codeElement){const range=document.createRange(); range.selectNodeContents(codeElement); const selection=window.getSelection(); selection.removeAllRanges(); selection.addRange(range); navigator.clipboard.writeText(codeElement.textContent);}}; let close=e=>{document.getElementById(elementModal).style.display='none'; document.getElementById(elementMaskModal).style.display='none';}; let autoHideClickOffset=event=>{if (event.target===document.getElementById(elementModal)){close();}}; return{code:elementCode,modal:elementModal,mask:elementMaskModal,copy:()=>{return copy()},close:()=>{return close();},get:(event)=>{return get(event)},autoHideClickOffset:(event)=>{return autoHideClickOffset(event);},};})();const Citations=(e=>{let nameElementRoot=Elements.refsList; let classNameElementRoot='plugin-section'; let headerScrollToBtn=Elements.scrollToRefsBtn; let Cite=require('citation-js'); let testRegex=(value)=>{return /^@[a-zA-Z]+\{/.test(value);}; let createRefsList=e=>{let refsList=document.getElementById(nameElementRoot); if (!refsList){refsList=document.createElement('div'); refsList.className=classNameElementRoot; refsList.id=nameElementRoot; let paragraph=document.createElement('p'); let icon=document.createElement('i'); icon.className='fa-solid fa-book'; paragraph.appendChild(icon); let textLabel=document.createTextNode('Citations:'); paragraph.appendChild(textLabel); refsList.appendChild(paragraph); let ul=document.createElement('ul'); refsList.appendChild(ul); document.querySelector(`.${Elements.classNames.markdownBody}`).appendChild(refsList);}}; let convertToCitation=(bibText)=>{return new Cite(bibText).format('bibliography',{lang:'en-US',format:'html',template:'apa',});}; let checkExists=e=>{let existsRefs=false; Array.from(document.querySelectorAll('p')).forEach(citation=>{let text=citation.textContent; if (testRegex(text)){existsRefs=true;}}); return existsRefs;}; let load=e=>{if (checkExists()){createRefsList(); document.querySelectorAll('p').forEach(block=>{let text=block.textContent; if (testRegex(text)){const refsList=document.getElementById(nameElementRoot).querySelector('ul'); const citationItem=document.createElement('li'); citationItem.className='ref'; citationItem.innerHTML=` <i class='fa-solid fa-code hover-icon' data-bibtex='${text}' onclick='BibTex.get(this)'></i> ${convertToCitation(text)}`; refsList.appendChild(citationItem); block.remove();}}); document.getElementById(headerScrollToBtn).style.display='inline';}else{document.getElementById(headerScrollToBtn).style.display='none';}}; return{element:nameElementRoot,toggleBtn:headerScrollToBtn,init:()=>{return load();},scrollTo:()=>{return ScrollTo.element(nameElementRoot);},};})();const DocsSources=(e=>{let classNameElementRoot='plugin-section'; let nameElementRoot=Elements.docsSourceList; let headerScrollToBtn=Elements.scrollToDocsBtn; let getDomain=url=>{var urlObj=new URL(url); return urlObj.hostname;}; let createPdfLinksList=e=>{let pdfLinksList=document.createElement('div'); pdfLinksList.className=classNameElementRoot; pdfLinksList.id=nameElementRoot; let paragraph=document.createElement('p'); let icon=document.createElement('i'); icon.className='fa-solid fa-paperclip'; paragraph.appendChild(icon); let textLabel=document.createTextNode('Documents:'); paragraph.appendChild(textLabel); pdfLinksList.appendChild(paragraph); document.querySelector(`.${Elements.classNames.markdownBody}`).appendChild(pdfLinksList);}; let checkDocsUrlExt=url=>{return !!(url.endsWith('.pdf')||url.endsWith('.docx')||url.endsWith('.epub')||url.endsWith('.mobi')||url.endsWith('.doc')||url.endsWith('.rst')||url.endsWith('.yml')||url.endsWith('.yaml')||url.endsWith('.json')||url.endsWith('.toml')||url.endsWith('.7z')||url.endsWith('.zip')||url.endsWith('.rar')||url.endsWith('.tar')||url.endsWith('.tar.gz')||url.endsWith('.gz')||url.endsWith('.bin')||url.endsWith('.img'));}; let listDocs=e=>{let docsList=[]; Array.from(document.querySelectorAll('a')).forEach(link=>{let url=link.href; if (checkDocsUrlExt(url)){let fileName=url.split('/').pop(); if (!docsList.some(item=> item.name===fileName)){docsList.push({url:url,name:fileName,});}}}); if (docsList.length > 0){createPdfLinksList(); let ul=document.createElement('ul'); let pdfLinksListDiv=document.getElementById(nameElementRoot); docsList.forEach(doc=>{let li=document.createElement('li'); li.className='pdd-left'; let a=document.createElement('a'); a.href=doc.url; a.target='_blank'; a.textContent=doc.name+` (from:${getDomain(doc.url)})`; li.appendChild(a); ul.appendChild(li);}); pdfLinksListDiv.appendChild(ul); document.getElementById(headerScrollToBtn).style.display='inline';}else{document.getElementById(headerScrollToBtn).style.display='none';}}; return{element:nameElementRoot,toggleBtn:headerScrollToBtn,init:()=>{return listDocs();},scrollTo:()=>{return ScrollTo.element(nameElementRoot);},};})();window.onload=e=>{Elements.pageTitle(); Citations.init(); MathDiagram.init(); DocsSources.init(); ScrollTo.checkScroll(); window.addEventListener('scroll',ScrollTo.checkScroll); window.addEventListener("click",event=>{BibTex.autoHideClickOffset(event);}); document.getElementById(BibTex.code).addEventListener('click',BibTex.copy); document.getElementById(ScrollTo.topBtn).addEventListener('click',ScrollTo.top); document.getElementById(Citations.toggleBtn).addEventListener('click',Citations.scrollTo); document.getElementById(DocsSources.toggleBtn).addEventListener('click',DocsSources.scrollTo);};const MathDiagram=(e=>{let math=e=>{MathJax.typesetPromise().then(e=>{document.querySelectorAll('.math-display').forEach(block=>{block.replaceWith(MathJax.tex2chtml(block.textContent.trim(),{display:true}).childNodes[0]);});});}; let diagram=e=>{mermaid.initialize({theme:'dark',securityLevel:'loose',}); let mermaidCodeBlocks=document.querySelectorAll('.language-mermaid'); mermaidCodeBlocks.forEach(block=>{block.classList.remove('language-mermaid'); block.classList.add('diagram-mermaid');}); mermaidCodeBlocks.forEach(block=>{let diagramDiv=document.createElement('div'); diagramDiv.classList.add('mermaid'); diagramDiv.textContent=block.textContent; block.textContent=''; block.appendChild(diagramDiv); mermaid.init(undefined,diagramDiv);});}; let init=e=>{let interval=setInterval(e=>{math(); diagram(); if (document.getElementsByTagName('mjx-math').length > 0){clearInterval(interval);}},100);}; return{init:()=>{return init();},math:()=>{return math();},diagram:()=>{return diagram();},};})();const ScrollTo=(e=>{let headerScrollToBtn=Elements.scrollToTopBtn; let top=e=>{window.scroll({top:0,left:0,behavior:'smooth'});}; let checkScroll=e=>{let scrollToTopBtn=document.getElementById(headerScrollToBtn); if (window.scrollY > 0){scrollToTopBtn.style.display='block';}else{scrollToTopBtn.style.display='none';}}; let element=(el,type='id')=>{let getElement; if (type=='id'){getElement=document.getElementById(el);}else{getElement=document.getElementsByClassName(el);}if (getElement){getElement.scrollIntoView({behavior:'smooth'}); Animate.effect(getElement,'animate__pulse');}}; return{topBtn:headerScrollToBtn,top:()=>{return top();},element:(el)=>{return element(el);},checkScroll:()=>{return checkScroll();},};})();